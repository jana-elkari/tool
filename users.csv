team_customer_relationship,team_communication,assumption,failed_documentation,role,industry,common_problem,country,team_size,project_distribution,work,project_method,meeting_frequency,user_feedback_frequency,external_partners,top2,top3,top4,top5,requirements_elicitation,elicitation_techniques,explicit_distinction,requirements_documentation,no_documentation_reasons,non_functional_requirements,communication_with_other_teams,doc_willing,doc_unwilling_but_produce,doc_dont_produce,requirements_testing_alignment
3,4,Make a reasonable assumption myself and proceed.,I do not document requirements.,Other (please specify),Security,Targets are moving,Germany,20,Yes,Approximately half on-site and half from home,Plan-driven,Weekly,Never,Yes,Incomplete or hidden requirements,Lack of communication between project team and end users,Problems with terminology,Unclear or unmeasurable non-functional requirements,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Analysis of existing documents/ Risk analyses/ Prototyping/ Workshops and focus groups/ (Requirements) Reuse databases and guidelines/ Design Thinking/ Observations/ Other,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ System behaviour/ Technical interfaces/ User interface(s)/ Acceptance criteria,Activity diagrams/ Class diagrams/ Sequence diagrams/ State machines/ Structured lists of requirements/ Use case diagrams/ Acceptance Criteria (Given-When-Then)/ Other (please specify),I didn't need to document it. I know it.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Agree,Agree,Strongly disagree,Testers participate in requirements reviews/ We define acceptance criteria and tests for requirements
4,4,I do not know.,Yes,Developer,Automotive,Lack of trust between our project team members,Sweden,5,No,Almost completely on-site,Agile,Weekly,Bi-weekly,No,Lack of communication between project team and end users,Gold plating (implementation of features without corresponding requirements),Communication flaws within the project team,Changes in requirements not communicated,I don't know,Prototyping,System behaviour,Activity diagrams,I knew colleagues would complain or hate or ridicule me.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity),4,Disagree,Disagree,Disagree,We derive tests from system models
4,3,Ask the customer/end user/ or both what should be assumed before proceeding.,Yes,Project Lead / Project Manager,Manufacturing,An important stakeholder is not represented in our project,Germany,8,Yes,Approximately half on-site and half from home,Hybrid,Weekly,Bi-weekly,Yes,Incomplete or hidden requirements,Changes in requirements not communicated,Insufficient support by project lead,Inconsistent requirements,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ Workshops and focus groups/ Observations,Goals/ Rules , business rules)/ Stakeholders/ Technical interfaces,I didn't need to document it. I know it.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),3,Neutral,Agree,Disagree,We define acceptance criteria and tests for requirements
5,4,Ask the customer/end user/or both what should be assumed before proceeding.,No,Product Owner,Manufacturing,Lack of communication between project team and end users,Germany,25,Yes,Almost completely on-site,Agile,Almost daily,Monthly,Yes,Targets are moving,Incomplete or hidden requirements,Lack of trust between our project team members and stakeholder or customer,Weak access to customer needs and / or (internal) business information,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ Workshops and focus groups/ Observations/ Usage data analysis (e.g. event logs),Architectural constraints/ Functional properties of the system/ Goals/ Quality properties of the system/ Stakeholders/ System behaviour/ Usage scenarios/ User interface(s)/ Internal or external constraints  laws)/ Acceptance criteria,Prototypes / user screens/ User stories/ Informal sketches / wireframes / mind maps/ Other (please specify),,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),1,Agree,Disagree,Strongly disagree,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,5,Make a reasonable assumption myself and proceed.,No,Project Lead / Project Manager,Automotive,Language barriers,Germany,25,No,Approximately half on-site and half from home,Plan-driven,Almost daily,Other (please specify),No,Problems with terminology,Targets are moving,Internal or external constraints are not considered,Weak access to customer needs and / or (internal) business information,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Risk analyses/ Prototyping/ Workshops and focus groups/ Usage data analysis (e.g. event logs),Architectural constraints/ Development process aspects/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Acceptance criteria,My colleagues told me not to waste any (more) time on documentation.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Strongly agree,Agree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
5,5,Ask the customer/end user/or both what should be assumed before proceeding.,No,Business Analyst,Avionics,Lack of communication between project team and end users,Sweden,7,Yes,Mostly from home,Agile,Almost daily,Other (please specify),Yes,Communication flaws between the project and the customer,Insufficient support by project lead,Weak access to customer needs and / or (internal) business information,Weak knowledge about customer's application domain,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Workshops and focus groups/ (Requirements) Reuse databases and guidelines/ Usage data analysis (e.g. event logs),Architectural constraints/ Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Agree,Agree,Strongly disagree,Testers participate in requirements reviews/ We define acceptance criteria and tests for requirements/ We derive tests from system models
3,3,Make a reasonable assumption myself and proceed.,Yes,Requirements Engineer,Telecommunication,Lack of trust between our project team members,Poland,20,Yes,Mostly on-site,Rather agile,Almost daily,Monthly,Yes,Lack of communication between project team and end users,Lack of commitment to shared goals within project,Weak knowledge about customer's application domain,We do not have enough time to carry out tasks,Agile: we elicit and / or refine requirements in several iterations.,Prototyping,Goals,Goal models/ Informal sketches / wireframes / mind maps,,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity),3,Neutral,Disagree,Disagree,We check the coverage of requirements with tests
3,3,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Project Lead / Project Manager,Public sector,Requirements are not traceable,United States,5,Yes,Almost completely from home,Hybrid,Weekly,Almost daily,Yes,Changes in requirements not communicated,No use of standard format for documenting requirements,Inconsistent requirements,Lack of commitment to shared goals within project,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Analysis of existing documents/ Prototyping/ (Requirements) Reuse databases and guidelines,Architectural constraints/ Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),3,Agree,Agree,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,4,Make a reasonable assumption myself and proceed.,Yes,Developer,Aerospace,We do not have enough time to carry out tasks,Sweden,250,No,Mostly on-site,Rather plan-driven,Almost daily,Monthly,No,Our team's responsibilities are unclear,Communication channels used in our project are ineffective,Lack of commitment to shared goals within project,Communication flaws within the project team,Agile: we elicit and / or refine requirements in several iterations.,Risk analyses/ Workshops and focus groups/ (Requirements) Reuse databases and guidelines/ Design Thinking,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Quality properties of the system/ System behaviour/ Technical interfaces/ User interface(s)/ Internal or external constraints  laws)/ Acceptance criteria,Natural language / plain text/ Sequence diagrams/ State machines/ Structured lists of requirements/ Use case diagrams,,,3,Disagree,Neutral,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
3,4,Make a reasonable assumption myself and proceed.,No,Developer,e-Commerce,Inconsistent requirements,Spain,15,Yes,Almost completely on-site,Rather agile,Almost daily,Weekly,Yes,Incomplete or hidden requirements,Underspecified requirements that are too abstract and allow for various interpretations,Changes in requirements not communicated,Gold plating (implementation of features without corresponding requirements),Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ Observations,Architectural constraints/ Development process aspects/ Goals/ Rules , business rules)/ Technical interfaces/ Usage scenarios/ User interface(s),I didn't need to document it. I know it.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Agree,Agree,Disagree,We check the coverage of requirements with tests
5,5,Ask the customer/end user/or both what should be assumed before proceeding.,No,Business Analyst,Other (please specify),Targets are moving,Turkey,4,Yes,Almost completely from home,Agile,Bi-weekly,Bi-weekly,Yes,Incomplete or hidden requirements,Changes in requirements not communicated,Internal or external constraints are not considered,Please make a selection,Agile: we elicit and / or refine requirements in several iterations.,Interviews,Functional properties of the system/ Goals/ Rules , business rules)/ System behaviour/ Usage scenarios/ User interface(s)/ Acceptance criteria,,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Agree,Agree,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
3,5,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Games engineering,Targets are moving,Turkey,25,Yes,Almost completely from home,Agile,Almost daily,Never,Yes,Communication flaws between the project and the customer,Underspecified requirements that are too abstract and allow for various interpretations,Incomplete or hidden requirements,Please make a selection,Agile: we elicit and / or refine requirements in several iterations.,Design Thinking/ Observations/ Usage data analysis (e.g. event logs),Architectural constraints/ Functional properties of the system/ Goals/ Acceptance criteria,User stories/ Acceptance Criteria (Given-When-Then),,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity),4,Neutral,Strongly agree,Strongly disagree,We define acceptance criteria and tests for requirements
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Finance,Weak knowledge about customer's application domain,Turkey,10,Yes,Almost completely from home,Agile,Almost daily,I don't know,Yes,Insufficient support by project lead,Communication flaws within the project team,Communication flaws between the project and the customer,Lack of commitment to shared goals within project,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Risk analyses/ Prototyping/ Observations/ Usage data analysis (e.g. event logs),Development process aspects/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,My project lead told me not to bother.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Agree,Strongly agree,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
4,5,Make a reasonable assumption myself and proceed.,Yes,Developer,Other (please specify),Communication flaws between the project and the customer,Spain,16,Yes,Approximately half on-site and half from home,Plan-driven,Weekly,I don't know,Yes,Changes in requirements not communicated,Unclear or unmeasurable non-functional requirements,Inconsistent requirements,Internal or external constraints are not considered,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Workshops and focus groups/ Design Thinking/ Usage data analysis (e.g. event logs),Architectural constraints/ Development process aspects/ Goals/ Quality properties of the system/ Rules , business rules)/ Stakeholders/ Usage scenarios,My colleagues told me not to spend any time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),3,Agree,Agree,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,3,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Telecommunication,Technically unfeasible requirements,Turkey,20,Yes,Approximately half on-site and half from home,Hybrid,Almost daily,Weekly,Yes,Incomplete or hidden requirements,Weak access to customer needs and / or (internal) business information,We do not have enough time to carry out tasks,No use of standard format for documenting requirements,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Observations,Goals/ Stakeholders,Use cases/ User stories,My project lead told me not to spend any time on documentation./ My project lead told me not to waste any (more) time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),1,Neutral,Agree,Disagree,We check the coverage of requirements with tests
3,3,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Other (please specify),Railway,Lack of communication between project team and end users,Spain,10,Yes,Mostly from home,Rather agile,Almost daily,Monthly,Yes,Weak knowledge about customer's application domain,Communication flaws between the project and the customer,Weak access to customer needs and / or (internal) business information,Targets are moving,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Interviews/ Analysis of existing documents,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Goals/ System behaviour/ Usage scenarios,Business process models/ Use cases,My project lead told me not to spend any time on documentation./ My project lead told me not to waste any (more) time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Portability (e.g.- adaptability- installability- replaceability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),3,Disagree,Neutral,Agree,We do not align tests and requirements
4,5,Make a reasonable assumption myself and proceed.,Yes,Scrum Master,Public sector,Weak knowledge about customer's application domain,Spain,10,Yes,Almost completely on-site,Rather plan-driven,Weekly,Bi-weekly,Yes,Weak access to customer needs and / or (internal) business information,Lack of communication between project team and end users,Targets are moving,Underspecified requirements that are too abstract and allow for various interpretations,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ External experts,Architectural constraints/ Goals/ Quality properties of the system/ Acceptance criteria,Natural language / plain text/ Prototypes / user screens/ User stories/ Acceptance Criteria (Given-When-Then)/ Informal sketches / wireframes / mind maps,I didn't need to document it. I know it.,,3,Agree,Neutral,Strongly disagree,Testers participate in requirements reviews/ We define acceptance criteria and tests for requirements
5,5,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Architect,Logistics,Communication flaws between the project and the customer,Spain,14,Yes,Mostly from home,Hybrid,Weekly,Bi-weekly,Yes,Changes in requirements not communicated,Inconsistent requirements,Technically unfeasible requirements,Lack of commitment to shared goals within project,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ Observations/ Usage data analysis (e.g. event logs)/ Experimentation with users,Architectural constraints/ Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ System behaviour/ User interface(s),Natural language / plain text/ Prototypes / user screens/ State machines/ Structured lists of requirements/ Use cases/ User stories,My project lead told me not to bother.,Compatibility (e.g.- co-existence- interoperability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),3,Strongly agree,Strongly agree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
3,5,Does not apply.,Yes,Developer,Other (please specify),Gold plating (implementation of features without corresponding requirements),Spain,20,Yes,Almost completely from home,Rather agile,Almost daily,Almost daily,Yes,Targets are moving,Inconsistent requirements,Internal or external constraints are not considered,Requirements are not traceable,I don't know,I don't know,I don't know,I don't know,My project lead told me not to bother.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),2,Disagree,Agree,Strongly disagree,We do not align tests and requirements
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,I do not document requirements.,Architect,Finance,We do not have enough time to carry out tasks,Turkey,12,Yes,Almost completely from home,Hybrid,Monthly,Almost daily,Yes,Communication flaws within the project team,Our team's responsibilities are unclear,No use of standard format for documenting requirements,Weak knowledge about customer's application domain,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ External experts/ Experimentation with users,Architectural constraints/ Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Usage scenarios/ Internal or external constraints (e.g. laws)/ Acceptance criteria,My colleagues told me not to spend any time on documentation.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Safety (e.g.- freedom of risk for health or disaster),4,Neutral,Neutral,Neutral,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
4,3,Make a reasonable assumption myself and proceed.,No,Developer,Finance,Insufficient support by project lead,Turkey,25,Yes,Almost completely from home,Rather agile,Almost daily,Bi-weekly,Yes,No use of standard format for documenting requirements,Internal or external constraints are not considered,We do not have enough time to carry out tasks,Technically unfeasible requirements,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Risk analyses,Architectural constraints/ Development process aspects/ Functional properties of the system/ Goals/ Rules , business rules)/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,My colleagues told me not to waste any (more) time on documentation.,External or internal constraints (e.g.- laws),1,Neutral,Neutral,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests
4,5,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Project Lead / Project Manager,Aerospace,Inconsistent requirements,Spain,30,Yes,Approximately half on-site and half from home,Plan-driven,Weekly,Bi-weekly,Yes,Lack of communication between project team and end users,Requirements are not traceable,Targets are moving,Incomplete or hidden requirements,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Interviews/ Analysis of existing documents/ Risk analyses/ Workshops and focus groups/ Design Thinking,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Technical interfaces/ User interface(s),Structured lists of requirements,I didn't need to document it. I know it./ My colleagues told me not to bother.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),2,0,Disagree,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
4,5,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Other (please specify),Gold plating (implementation of features without corresponding requirements),Spain,20,No,Almost completely from home,Agile,Weekly,Weekly,No,Changes in requirements not communicated,Incomplete or hidden requirements,Requirements are not traceable,Underspecified requirements that are too abstract and allow for various interpretations,Agile: we elicit and / or refine requirements in several iterations.,Prototyping/ Design Thinking/ Observations,Functional properties of the system,User stories,I didn't need to document it. I know it.,Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Agree,Agree,Disagree,We do not align tests and requirements
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,I do not document requirements.,Marketing,Other (please specify),Communication flaws between the project and the customer,Spain,5,Yes,Mostly from home,Hybrid,Weekly,Never,Yes,We do not have enough time to carry out tasks,Lack of commitment to shared goals within project,Incomplete or hidden requirements,Gold plating (implementation of features without corresponding requirements),Other (please specify),Analysis of existing documents/ Prototyping/ Workshops and focus groups/ (Requirements) Reuse databases and guidelines/ External experts/ Observations,I don't know,Activity diagrams/ Business process models/ Natural language / plain text/ Prototypes / user screens/ Informal sketches / wireframes / mind maps,My project lead told me not to waste any (more) time on documentation.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ External or internal constraints (e.g.- laws),4,Agree,Neutral,Strongly disagree,Testers participate in requirements reviews/ We derive tests from system models
3,4,Make a reasonable assumption myself and proceed.,No,Other (please specify),Healthcare,Our requirements engineers lack enthusiasm or commitment to do requirements analysis,Spain,15,No,Approximately half on-site and half from home,Hybrid,Almost daily,Other (please specify),No,Our team's responsibilities are unclear,Communication flaws within the project team,Changes in requirements not communicated,Weak knowledge about customer's application domain,Other (please specify),Interviews/ Risk analyses/ Prototyping,Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Stakeholders/ System behaviour/ Internal or external constraints (e.g. laws),,Compatibility (e.g.- co-existence- interoperability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Strongly agree,Agree,Strongly disagree,Does not apply
5,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Other (please specify),Communication flaws between the project and the customer,Spain,30,No,Almost completely from home,Agile,Almost daily,Weekly,No,Communication flaws within the project team,Weak knowledge about customer's application domain,Lack of trust between our project team members,Lack of trust between our project team members and stakeholder or customer,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ Other,Functional properties of the system/ Quality properties of the system/ System behaviour/ Usage scenarios/ User interface(s)/ Acceptance criteria,Natural language / plain text/ Prototypes / user screens/ User stories/ Acceptance Criteria (Given-When-Then)/ Informal sketches / wireframes / mind maps,,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Strongly agree,Disagree,Disagree,We define acceptance criteria and tests for requirements
4,3,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Project Lead / Project Manager,Healthcare,Communication flaws within the project team,Spain,9,Yes,Almost completely from home,Rather agile,Weekly,Weekly,Yes,Technically unfeasible requirements,Lack of communication between project team and end users,We do not have enough time to carry out tasks,Inconsistent requirements,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ Design Thinking/ Experimentation with users,Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Stakeholders/ System behaviour/ Usage scenarios/ User interface(s),Natural language / plain text/ Prototypes / user screens/ Use cases/ User stories/ Informal sketches / wireframes / mind maps,My project lead told me not to bother./ My colleagues told me not to bother.,Compatibility (e.g.- co-existence- interoperability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),3,Neutral,Agree,Disagree,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models/ We do not align tests and requirements
3,2,Make a reasonable assumption myself and proceed.,I do not document requirements.,Architect,Other (please specify),Communication channels used in our project are ineffective,Spain,15,Yes,Approximately half on-site and half from home,Plan-driven,Weekly,I don't know,Yes,Communication flaws within the project team,Communication flaws between the project and the customer,Requirements are not traceable,Insufficient support by project lead,Other (please specify),Interviews/ Analysis of existing documents/ Prototyping/ Workshops and focus groups/ (Requirements) Reuse databases and guidelines/ External experts/ Experimentation with users,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Quality properties of the system/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ Internal or external constraints  laws),Natural language / plain text,My project lead told me not to spend any time on documentation./ My colleagues told me not to spend any time on documentation./ My colleagues told me not to waste any (more) time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),1,Neutral,Agree,Disagree,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
4,4,Make a reasonable assumption myself and proceed.,I do not document requirements.,Architect,Other (please specify),Targets are moving,Spain,400,No,Almost completely from home,Agile,Weekly,Monthly,No,Underspecified requirements that are too abstract and allow for various interpretations,Communication flaws between the project and the customer,We do not have enough time to carry out tasks,Gold plating (implementation of features without corresponding requirements),Agile: we elicit and / or refine requirements in several iterations.,Prototyping/ Experimentation with users/ Other,Stakeholders/ Usage scenarios/ User interface(s)/ Acceptance criteria,Natural language / plain text/ Prototypes / user screens,I didn't need to document it. I know it.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),2,Agree,Disagree,Disagree,We do not align tests and requirements
2,4,Make a reasonable assumption myself and proceed.,No,Developer,e-Commerce,Communication flaws between the project and the customer,Portugal,10,No,Almost completely from home,Agile,Almost daily,Monthly,No,Lack of communication between project team and end users,Incomplete or hidden requirements,Targets are moving,Weak knowledge about customer's application domain,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ Design Thinking/ Observations,Architectural constraints/ Goals/ Rules , business rules),I didn't need to document it. I know it./ I knew colleagues would complain or hate or ridicule me./ My project lead told me not to bother./ My project lead told me not to spend any time on documentation./ My project lead told me not to waste any (more) time on documentation./ My colleagues told me not to bother./ My colleagues told me not to spend any time on documentation./ My colleagues told me not to waste any (more) time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),1,Agree,Agree,Strongly disagree,Testers participate in requirements reviews
3,3,Make a reasonable assumption myself and proceed.,I do not document requirements.,Other (please specify),Avionics,Communication flaws between the project and the customer,Turkey,10,Yes,Almost completely on-site,I don't know,Weekly,I don't know,Yes,Communication channels used in our project are ineffective,Changes in requirements not communicated,Incomplete or hidden requirements,Targets are moving,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Analysis of existing documents,Functional properties of the system/ Goals/ Stakeholders/ Acceptance criteria,Natural language / plain text/ Structured lists of requirements/ Acceptance Criteria (Given-When-Then),,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),1,Neutral,Neutral,Disagree,Testers participate in requirements reviews/ We define acceptance criteria and tests for requirements
4,5,Make a reasonable assumption myself and proceed.,Yes,Developer,Energy,Communication flaws between the project and the customer,Nigeria,10,No,Approximately half on-site and half from home,Plan-driven,Bi-weekly,Never,No,Communication channels used in our project are ineffective,Unclear or unmeasurable non-functional requirements,Inconsistent requirements,Technically unfeasible requirements,I don't know,I don't know,System behaviour,I don't know,I didn't need to document it. I know it./ I knew colleagues would complain or hate or ridicule me.,,1,Agree,Agree,Strongly agree,I don't know
3,5,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Business Analyst,Manufacturing,Changes in requirements not communicated,Turkey,6,Yes,Mostly from home,Hybrid,Bi-weekly,Monthly,Yes,Inconsistent requirements,Targets are moving,Weak knowledge about customer's application domain,Problems with terminology,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents/ Risk analyses/ (Requirements) Reuse databases and guidelines/ External experts/ Observations,Functional properties of the system/ Technical interfaces/ Usage scenarios/ User interface(s),Business process models,My project lead told me not to waste any (more) time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Agree,Agree,Strongly disagree,We check the coverage of requirements with tests
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Finance,Technically unfeasible requirements,Nigeria,20,Yes,Mostly from home,Hybrid,Almost daily,Almost daily,Yes,Inconsistent requirements,Incomplete or hidden requirements,Targets are moving,No use of standard format for documenting requirements,Agile: we elicit and / or refine requirements in several iterations.,Prototyping/ Design Thinking/ Experimentation with users,Development process aspects/ Technical interfaces/ Usage scenarios,Structured lists of requirements/ Use case diagrams/ Acceptance Criteria (Given-When-Then),I didn't need to document it. I know it.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),4,Agree,Agree,Strongly disagree,Testers participate in requirements reviews
3,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Business Analyst,Manufacturing,Communication flaws within the project team,Turkey,3,No,Approximately half on-site and half from home,Hybrid,Bi-weekly,Monthly,No,Unclear or unmeasurable non-functional requirements,Changes in requirements not communicated,Weak knowledge about customer's application domain,Weak access to customer needs and / or (internal) business information,I don't know,Risk analyses,Goals,I don't know,My project lead told me not to bother.,Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),3,Disagree,Neutral,Agree,I don't know
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,No,Product Manager,Agriculture,We do not have enough time to carry out tasks,Nigeria,4,No,Mostly from home,Plan-driven,Weekly,Almost daily,No,No use of standard format for documenting requirements,Communication flaws between the project and the customer,Language barriers,Problems with terminology,Agile: we elicit and / or refine requirements in several iterations.,Usage data analysis (e.g. event logs),Development process aspects/ Goals/ Rules , business rules),I didn't need to document it. I know it.,Compatibility (e.g.- co-existence- interoperability),2,Strongly disagree,Disagree,Disagree,We define acceptance criteria and tests for requirements
5,5,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Agriculture,Problems with terminology,Nigeria,12,No,Almost completely on-site,Agile,Bi-weekly,Weekly,No,Requirements are not traceable,Communication channels used in our project are ineffective,Insufficient support by project lead,Changes in requirements not communicated,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Prototyping/ Workshops and focus groups/ Design Thinking/ Observations,Goals/ Quality properties of the system/ Rules , business rules)/ Technical interfaces/ Usage scenarios/ User interface(s)/ Acceptance criteria,I didn't need to document it. I know it.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),2,Strongly agree,Strongly agree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models/ We do not align tests and requirements
4,4,Make a reasonable assumption myself and proceed.,Yes,Project Lead / Project Manager,e-Commerce,Inconsistent requirements,Turkey,6,No,Almost completely from home,Rather agile,Bi-weekly,Bi-weekly,No,No use of standard format for documenting requirements,Incomplete or hidden requirements,Weak access to customer needs and / or (internal) business information,Unclear or unmeasurable non-functional requirements,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ External experts/ Observations,Architectural constraints/ System behaviour/ Usage scenarios/ User interface(s),Activity diagrams/ Prototypes / user screens/ Sequence diagrams/ State machines/ Use case diagrams/ Informal sketches / wireframes / mind maps,I didn't need to document it. I know it./ I knew colleagues would complain or hate or ridicule me./ My project lead told me not to bother./ My project lead told me not to spend any time on documentation./ My project lead told me not to waste any (more) time on documentation./ My colleagues told me not to bother./ My colleagues told me not to spend any time on documentation./ My colleagues told me not to waste any (more) time on documentation.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability),3,Agree,Agree,Disagree,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
5,5,Make a reasonable assumption myself and proceed.,No,Developer,Education,Lack of communication between project team and end users,Turkey,1,Yes,Approximately half on-site and half from home,Plan-driven,Weekly,I don't know,Yes,Lack of trust between our project team members and stakeholder or customer,Insufficient support by project lead,Communication channels used in our project are ineffective,Technically unfeasible requirements,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Workshops and focus groups/ Design Thinking/ Observations/ Experimentation with users,Architectural constraints/ Functional properties of the system/ Goals/ Rules , business rules),I didn't need to document it. I know it.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),4,Strongly agree,Agree,Disagree,Testers participate in requirements reviews
4,5,Ask the customer/end user/or both what should be assumed before proceeding.,I do not document requirements.,Business Analyst,Telecommunication,Internal or external constraints are not considered,Turkey,4,Yes,Almost completely from home,Agile,Almost daily,Almost daily,Yes,Incomplete or hidden requirements,Gold plating (implementation of features without corresponding requirements),We do not have enough time to carry out tasks,Unclear or unmeasurable non-functional requirements,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Risk analyses/ (Requirements) Reuse databases and guidelines/ Design Thinking/ Observations/ Usage data analysis (e.g. event logs)/ Experimentation with users,Architectural constraints/ Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Agree,Agree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,5,Ask the customer/end user/or both what should be assumed before proceeding.,No,Product Manager,Human resources,Our team's responsibilities are unclear,Spain,100,No,Mostly from home,Rather agile,Almost daily,Bi-weekly,No,Lack of communication between project team and end users,Weak knowledge about customer's application domain,Lack of trust between our project team members,Weak access to customer needs and / or (internal) business information,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ Workshops and focus groups/ Design Thinking/ Usage data analysis (e.g. event logs)/ Experimentation with users,Goals/ Stakeholders/ Usage scenarios/ Acceptance criteria,Prototypes / user screens/ User stories/ Acceptance Criteria (Given-When-Then),,,4,Neutral,Neutral,Agree,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
5,4,Make a reasonable assumption myself and proceed.,Yes,Product Manager,Finance,Inconsistent requirements,Estonia,5,No,Mostly on-site,Hybrid,Bi-weekly,Monthly,No,Changes in requirements not communicated,We do not have enough time to carry out tasks,Weak access to customer needs and / or (internal) business information,Weak knowledge about customer's application domain,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Workshops and focus groups/ Usage data analysis (e.g. event logs),Functional properties of the system/ Goals/ Usage scenarios,Business process models/ Natural language / plain text/ User stories,,Compatibility (e.g.- co-existence- interoperability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),2,Agree,Disagree,Strongly disagree,Does not apply
5,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Product Owner,Automotive,Language barriers,United States,18,Yes,Mostly from home,Agile,Almost daily,Bi-weekly,Yes,Problems with terminology,Inconsistent requirements,Incomplete or hidden requirements,Lack of communication between project team and end users,Agile: we elicit and / or refine requirements in several iterations.,Prototyping/ Workshops and focus groups,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Goals/ Rules , business rules)/ Stakeholders/ System behaviour/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,My project lead told me not to spend any time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ External or internal constraints (e.g.- laws),4,Agree,Disagree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ Other (please specify)
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Product Owner,Finance,Requirements are not traceable,Switzerland,30,Yes,Mostly from home,Rather agile,Weekly,Monthly,Yes,Incomplete or hidden requirements,Unclear or unmeasurable non-functional requirements,Communication channels used in our project are ineffective,Weak knowledge about customer's application domain,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Risk analyses,Development process aspects/ Functional properties of the system/ Technical interfaces/ Acceptance criteria,Prototypes / user screens/ User stories/ Acceptance Criteria (Given-When-Then),My project lead told me not to spend any time on documentation./ My colleagues told me not to bother.,Compatibility (e.g.- co-existence- interoperability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ External or internal constraints (e.g.- laws),1,Disagree,Disagree,Neutral,We define acceptance criteria and tests for requirements
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Requirements Engineer,e-Government,Communication flaws between the project and the customer,Pakistan,10,No,Mostly on-site,Hybrid,Other (Please specify),Other (please specify),No,Changes in requirements not communicated,Targets are moving,We do not have enough time to carry out tasks,No use of standard format for documenting requirements,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Interviews/ Analysis of existing documents/ Prototyping,Architectural constraints/ Functional properties of the system/ Quality properties of the system/ Rules , business rules)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,I didn't need to document it. I know it./ My project lead told me not to waste any (more) time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),3,Disagree,Neutral,Neutral,Testers participate in requirements reviews/ We check the coverage of requirements with tests
3,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Product Manager,Finance,Targets are moving,Spain,10,No,Mostly on-site,Agile,Almost daily,Weekly,No,Technically unfeasible requirements,Lack of trust between our project team members and stakeholder or customer,Incomplete or hidden requirements,Communication channels used in our project are ineffective,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Interviews/ Analysis of existing documents/ Risk analyses/ External experts,Architectural constraints/ Development process aspects/ Functional properties of the system/ Quality properties of the system/ Technical interfaces/ Usage scenarios/ Internal or external constraints  laws),Activity diagrams/ Natural language / plain text/ State machines/ Structured lists of requirements/ Use cases,I knew colleagues would complain or hate or ridicule me.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),1,Agree,Agree,Disagree,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
5,5,Make a reasonable assumption myself and proceed.,Yes,Developer,Automotive,Inconsistent requirements,Germany,28,Yes,Approximately half on-site and half from home,Rather plan-driven,Bi-weekly,Monthly,Yes,Targets are moving,Gold plating (implementation of features without corresponding requirements),Please make a selection,We do not have enough time to carry out tasks,Agile: we elicit and / or refine requirements in several iterations.,Workshops and focus groups,Architectural constraints/ Development process aspects/ Functional properties of the system/ Goals,Natural language / plain text,I didn't need to document it. I know it./ I knew colleagues would complain or hate or ridicule me.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity),2,Strongly agree,Strongly agree,Strongly disagree,We check the coverage of requirements with tests
3,4,Does not apply.,No,Developer,Railway,Incomplete or hidden requirements,Austria,20,No,Approximately half on-site and half from home,Rather agile,Almost daily,I don't know,No,Lack of commitment to shared goals within project,Inconsistent requirements,Weak access to customer needs and / or (internal) business information,Language barriers,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents/ Prototyping/ Workshops and focus groups,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Rules , business rules)/ System behaviour/ Technical interfaces/ Usage scenarios/ Acceptance criteria,I knew colleagues would complain or hate or ridicule me./ My colleagues told me not to bother.,,3,Disagree,Agree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,5,Make a reasonable assumption myself and proceed.,No,Product Manager,Automotive,Targets are moving,United States,10,No,Almost completely from home,Agile,Almost daily,Weekly,No,Incomplete or hidden requirements,Lack of communication between project team and end users,Weak knowledge about customer's application domain,We do not have enough time to carry out tasks,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents/ Prototyping/ Workshops and focus groups,Development process aspects/ System behaviour/ Usage scenarios/ User interface(s)/ Internal or external constraints  laws)/ Acceptance criteria,Prototypes / user screens/ User stories/ Acceptance Criteria (Given-When-Then)/ Informal sketches / wireframes / mind maps,I didn't need to document it. I know it.,Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Strongly agree,Strongly agree,Disagree,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,4,Make a reasonable assumption myself and proceed.,Yes,Product Manager,Education,Communication flaws within the project team,Spain,12,Yes,Almost completely from home,Rather agile,Almost daily,Monthly,Yes,Insufficient support by project lead,We do not have enough time to carry out tasks,Targets are moving,Our team's responsibilities are unclear,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ Workshops and focus groups/ Design Thinking/ External experts/ Observations/ Experimentation with users,Functional properties of the system/ Goals/ Stakeholders/ System behaviour/ Usage scenarios/ User interface(s)/ Acceptance criteria,Business process models/ Natural language / plain text/ Prototypes / user screens/ Sequence diagrams/ Structured lists of requirements/ User stories,,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Agree,Agree,Disagree,Testers participate in requirements reviews
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,I do not document requirements.,Developer,e-Commerce,We do not have enough time to carry out tasks,Australia,20,Yes,Almost completely from home,Agile,Almost daily,Weekly,Yes,An important stakeholder is not represented in our project,Lack of communication between project team and end users,Incomplete or hidden requirements,Weak knowledge about customer's application domain,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Observations,Architectural constraints/ Functional properties of the system/ System behaviour/ Technical interfaces/ Usage scenarios,Natural language / plain text/ Structured lists of requirements/ User stories/ Informal sketches / wireframes / mind maps,I didn't need to document it. I know it.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),3,Strongly agree,Agree,Disagree,Testers participate in requirements reviews
4,3,Make a reasonable assumption myself and proceed.,No,Developer,Enterprise resource planning,Communication flaws within the project team,United States,12,No,Almost completely on-site,Rather plan-driven,Weekly,Bi-weekly,No,Our requirements engineers lack enthusiasm or commitment to do requirements analysis,Communication channels used in our project are ineffective,Lack of trust between our project team members and stakeholder or customer,Changes in requirements not communicated,I don't know,Experimentation with users,Functional properties of the system/ User interface(s)/ Acceptance criteria,Natural language / plain text/ Structured lists of requirements,I didn't need to document it. I know it.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Neutral,Agree,Disagree,Testers participate in requirements reviews
4,4,Make a reasonable assumption myself and proceed.,Yes,Project Lead / Project Manager,Security,Underspecified requirements that are too abstract and allow for various interpretations,Italy,50,No,Approximately half on-site and half from home,Rather plan-driven,Weekly,Monthly,No,Gold plating (implementation of features without corresponding requirements),Weak access to customer needs and / or (internal) business information,Lack of trust between our project team members,No use of standard format for documenting requirements,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents/ Risk analyses/ Design Thinking,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Technical interfaces/ Usage scenarios/ User interface(s),Natural language / plain text/ Structured lists of requirements,,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Strongly agree,Strongly agree,Strongly disagree,I don't know
3,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Customer,e-Government,Incomplete or hidden requirements,Italy,4,Yes,Almost completely from home,Hybrid,Weekly,Monthly,Yes,Gold plating (implementation of features without corresponding requirements),Please make a selection,Our requirements engineers lack enthusiasm or commitment to do requirements analysis,Internal or external constraints are not considered,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ Experimentation with users,Functional properties of the system/ Goals/ Rules , business rules)/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s),,Compatibility (e.g.- co-existence- interoperability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),1,Disagree,Neutral,Neutral,We check the coverage of requirements with tests
4,4,Make a reasonable assumption myself and proceed.,Yes,Architect,Public sector,Communication flaws between the project and the customer,Italy,12,Yes,Almost completely on-site,Hybrid,Weekly,Weekly,Yes,Communication channels used in our project are ineffective,Communication flaws within the project team,Insufficient support by project lead,Inconsistent requirements,Agile: we elicit and / or refine requirements in several iterations., Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Interviews/ Analysis of existing documents/ Prototyping/ Workshops and focus groups/ Design Thinking/ Experimentation with users,Goals,I didn't need to document it. I know it.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability),3,Disagree,Strongly disagree,Neutral,Testers participate in requirements reviews
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Project Lead / Project Manager,Public sector,Communication flaws within the project team,Italy,12,Yes,Almost completely on-site,Hybrid,Weekly,Weekly,Yes,Insufficient support by project lead,We do not have enough time to carry out tasks,Our team's responsibilities are unclear,Internal or external constraints are not considered,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ Design Thinking/ Observations,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Goals/ Rules , business rules)/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,My project lead told me not to bother.,Compatibility (e.g.- co-existence- interoperability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Strongly agree,Agree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
3,3,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,e-Government,Incomplete or hidden requirements,Italy,2,Yes,Approximately half on-site and half from home,Agile,Bi-weekly,Weekly,Yes,Inconsistent requirements,We do not have enough time to carry out tasks,Weak knowledge about customer's application domain,Underspecified requirements that are too abstract and allow for various interpretations,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ Design Thinking/ Observations,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Goals/ Rules , business rules)/ Stakeholders/ System behaviour/ Usage scenarios/ User interface(s)/ Acceptance criteria,My project lead told me not to bother.,Compatibility (e.g.- co-existence- interoperability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),1,Agree,Agree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,3,Ask the customer/end user/or both what should be assumed before proceeding.,0,Developer,e-Commerce,Communication flaws within the project team,Italy,6,Yes,Almost completely on-site,Agile,Weekly,Monthly,Yes,Insufficient support by project lead,Changes in requirements not communicated,Incomplete or hidden requirements,Communication flaws between the project and the customer,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents,Development process aspects/ I don't know,Business process models,My project lead told me not to bother.,Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),4,Agree,Agree,Disagree,Testers participate in requirements reviews
5,4,Ask the customer/end user/or both what should be assumed before proceeding.,I do not document requirements.,Requirements Engineer,Healthcare,An important stakeholder is not represented in our project,Italy,25,Yes,Approximately half on-site and half from home,Rather agile,Almost daily,Weekly,Yes,We do not have enough time to carry out tasks,Weak knowledge about customer's application domain,Weak access to customer needs and / or (internal) business information,Targets are moving,Agile: we elicit and / or refine requirements in several iterations.,Workshops and focus groups/ Design Thinking/ External experts,Architectural constraints/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Technical interfaces/ Usage scenarios/ Acceptance criteria,,Compatibility (e.g.- co-existence- interoperability)/ Portability (e.g.- adaptability- installability- replaceability)/ External or internal constraints (e.g.- laws),5,Disagree,Neutral,Agree,We define acceptance criteria and tests for requirements
3,4,Make a reasonable assumption myself and proceed.,Yes,Developer,Other (please specify),Targets are moving,United States,30,I don't know,Approximately half on-site and half from home,Agile,Weekly,Never,I don't know,Communication flaws within the project team,Communication channels used in our project are ineffective,Incomplete or hidden requirements,Weak access to customer needs and / or (internal) business information,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Analysis of existing documents/ Design Thinking/ External experts/ Observations,Architectural constraints/ Development process aspects/ Functional properties of the system/ Goals/ Stakeholders/ System behaviour/ Usage scenarios/ Acceptance criteria,Natural language / plain text/ Structured lists of requirements/ Use case diagrams,My colleagues told me not to spend any time on documentation.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Agree,Agree,Disagree,We define acceptance criteria and tests for requirements
4,4,Make a reasonable assumption myself and proceed.,Yes,Architect,Public sector,Communication flaws within the project team,Italy,20,Yes,Approximately half on-site and half from home,Agile,Almost daily,Almost daily,Yes,Changes in requirements not communicated,Communication flaws between the project and the customer,Insufficient support by project lead,Underspecified requirements that are too abstract and allow for various interpretations,Agile: we elicit and / or refine requirements in several iterations.,Prototyping/ Workshops and focus groups/ Experimentation with users,Architectural constraints/ Development process aspects/ Goals/ System behaviour,Class diagrams/ Use case diagrams/ Use cases,I didn't need to document it. I know it.,Compatibility (e.g.- co-existence- interoperability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Safety (e.g.- freedom of risk for health or disaster),3,Agree,Neutral,0,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,4,Make a reasonable assumption myself and proceed.,Yes,Other (please specify),Security,We do not have enough time to carry out tasks,United States,10,No,Almost completely on-site,Hybrid,Almost daily,Monthly,No,Communication channels used in our project are ineffective,Lack of communication between project team and end users,No use of standard format for documenting requirements,Communication flaws within the project team,Agile: we elicit and / or refine requirements in several iterations.,Prototyping/ Observations/ Experimentation with users,Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Technical interfaces,Natural language / plain text/ Prototypes / user screens/ Use cases/ Informal sketches / wireframes / mind maps,,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),3,Agree,Agree,Disagree,Testers participate in requirements reviews
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Public sector,Incomplete or hidden requirements,Italy,4,No,Almost completely from home,Hybrid,Weekly,Almost daily,No,Communication flaws within the project team,Changes in requirements not communicated,We do not have enough time to carry out tasks,Our team's responsibilities are unclear,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ Experimentation with users,Functional properties of the system/ Goals/ System behaviour/ Technical interfaces/ User interface(s),Activity diagrams/ Informal sketches / wireframes / mind maps,My project lead told me not to bother.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Agree,Strongly agree,Disagree,I don't know
3,4,Ask the customer/end user/or both what should be assumed before proceeding.,No,Project Lead / Project Manager,Education,Underspecified requirements that are too abstract and allow for various interpretations,Italy,10,Yes,Approximately half on-site and half from home,Hybrid,Almost daily,Weekly,Yes,Incomplete or hidden requirements,Changes in requirements not communicated,Targets are moving,Weak access to customer needs and / or (internal) business information,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Risk analyses/ Design Thinking/ Observations/ Experimentation with users,Architectural constraints/ Functional properties of the system/ Rules , business rules)/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ Internal or external constraints (e.g. laws),My project lead told me not to spend any time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ External or internal constraints (e.g.- laws),4,Strongly agree,Agree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests
5,5,Ask the customer/end user/or both what should be assumed before proceeding.,No,Developer,Public sector,Incomplete or hidden requirements,Italy,8,Yes,Mostly on-site,Hybrid,Almost daily,Other (please specify),Yes,Requirements are not traceable,Targets are moving,Changes in requirements not communicated,Underspecified requirements that are too abstract and allow for various interpretations,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Interviews/ Analysis of existing documents/ Observations,Functional properties of the system/ Rules , business rules)/ Usage scenarios,,Compatibility (e.g.- co-existence- interoperability)/ Portability (e.g.- adaptability- installability- replaceability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),4,Strongly agree,Disagree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
3,3,Make a reasonable assumption myself and proceed.,Yes,Developer,Enterprise resource planning,No use of standard format for documenting requirements,United States,15,Yes,Almost completely from home,Agile,Weekly,I don't know,Yes,Requirements are not traceable,Communication channels used in our project are ineffective,Targets are moving,Problems with terminology,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents/ Prototyping/ (Requirements) Reuse databases and guidelines/ External experts/ Observations/ Usage data analysis (e.g. event logs)/ Experimentation with users,Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Rules , business rules)/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,My colleagues told me not to waste any (more) time on documentation.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Strongly agree,Agree,Agree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Scrum Master,Finance,Communication flaws between the project and the customer,Italy,30,Yes,Approximately half on-site and half from home,Hybrid,Almost daily,Weekly,Yes,Incomplete or hidden requirements,Weak access to customer needs and / or (internal) business information,Unclear or unmeasurable non-functional requirements,Changes in requirements not communicated,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ (Requirements) Reuse databases and guidelines/ Design Thinking/ External experts/ Usage data analysis (e.g. event logs)/ Lean Startup,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,My colleagues told me not to waste any (more) time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),3,Disagree,Agree,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
3,3,Make a reasonable assumption myself and proceed.,Yes,Requirements Engineer,Avionics,Communication flaws within the project team,Italy,4,Yes,Mostly on-site,Plan-driven,Weekly,I don't know,Yes,Technically unfeasible requirements,Lack of trust between our project team members and stakeholder or customer,Our requirements engineers lack enthusiasm or commitment to do requirements analysis,No use of standard format for documenting requirements,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Analysis of existing documents/ Design Thinking,Development process aspects/ Formal properties of the system/ Rules , business rules),My project lead told me not to spend any time on documentation.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Safety (e.g.- freedom of risk for health or disaster),3,Strongly disagree,Neutral,Neutral,Testers participate in requirements reviews/ We define acceptance criteria and tests for requirements
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,No,Project Lead / Project Manager,Insurance,Lack of commitment to shared goals within project,Norway,6,Yes,Approximately half on-site and half from home,Rather agile,Almost daily,Other (please specify),Yes,Insufficient support by project lead,Lack of trust between our project team members and stakeholder or customer,Communication flaws between the project and the customer,Language barriers,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ Workshops and focus groups/ Design Thinking/ External experts,Architectural constraints/ Development process aspects/ Functional properties of the system/ Goals/ Rules , business rules)/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s),,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Agree,Neutral,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,5,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Architect,Energy,Changes in requirements not communicated,Italy,4,Yes,Approximately half on-site and half from home,Agile,Bi-weekly,Weekly,Yes,Targets are moving,Lack of communication between project team and end users,Weak access to customer needs and / or (internal) business information,Communication flaws within the project team,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ Observations/ Experimentation with users,Architectural constraints/ Functional properties of the system/ Goals/ Stakeholders/ Technical interfaces/ Usage scenarios,Activity diagrams/ Class diagrams/ Natural language / plain text/ Prototypes / user screens/ Sequence diagrams/ Use case diagrams/ Use cases,,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ External or internal constraints (e.g.- laws),1,Agree,Disagree,Strongly disagree,We check the coverage of requirements with tests
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Manufacturing,We do not have enough time to carry out tasks,United States,7,Yes,Almost completely from home,Agile,Weekly,Weekly,Yes,Targets are moving,Incomplete or hidden requirements,Communication flaws within the project team,No use of standard format for documenting requirements,Agile: we elicit and / or refine requirements in several iterations.,Prototyping/ Workshops and focus groups/ Design Thinking/ Usage data analysis (e.g. event logs)/ Experimentation with users,Architectural constraints/ System behaviour/ Usage scenarios/ User interface(s),Prototypes / user screens/ Use cases/ Acceptance Criteria (Given-When-Then),I didn't need to document it. I know it.,Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Agree,Strongly agree,Neutral,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
4,4,Make a reasonable assumption myself and proceed.,No,Product Manager,Agriculture,Inconsistent requirements,Canada,5,Yes,Almost completely from home,Rather agile,Almost daily,Monthly,Yes,Weak knowledge about customer's application domain,Lack of communication between project team and end users,Targets are moving,Please make a selection,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ Workshops and focus groups,Functional properties of the system/ Goals/ Rules , business rules)/ System behaviour/ Technical interfaces/ User interface(s)/ Acceptance criteria/ None of the above,I didn't need to document it. I know it.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),1,Agree,Neutral,Disagree,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Healthcare,Inconsistent requirements,Italy,3,Yes,Mostly from home,Agile,Almost daily,Weekly,Yes,Requirements are not traceable,Weak knowledge about customer's application domain,No use of standard format for documenting requirements,Targets are moving,Agile: we elicit and / or refine requirements in several iterations.,Design Thinking,Development process aspects/ Goals/ Quality properties of the system/ Stakeholders/ Technical interfaces/ User interface(s)/ Acceptance criteria,Business process models/ Sequence diagrams/ Use cases/ Acceptance Criteria (Given-When-Then),,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),3,Agree,Disagree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,No,Requirements Engineer,Education,Incomplete or hidden requirements,United States,30,No,Approximately half on-site and half from home,Hybrid,Weekly,Monthly,No,Targets are moving,Technically unfeasible requirements,Weak knowledge about customer's application domain,Insufficient support by project lead,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Design Thinking,Architectural constraints/ Technical interfaces/ Usage scenarios,Sequence diagrams/ State machines/ Use case diagrams,My colleagues told me not to spend any time on documentation.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity),4,Strongly agree,Agree,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models/ We do not align tests and requirements
5,5,Ask the customer/end user/or both what should be assumed before proceeding.,No,Architect,Other (please specify),Incomplete or hidden requirements,United States,10,No,Approximately half on-site and half from home,Hybrid,Weekly,I don't know,No,Lack of trust between our project team members and stakeholder or customer,Weak knowledge about customer's application domain,Our team's responsibilities are unclear,Weak access to customer needs and / or (internal) business information,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents/ Risk analyses/ Prototyping/ Workshops and focus groups/ (Requirements) Reuse databases and guidelines/ Design Thinking/ External experts/ Observations/ Usage data analysis (e.g. event logs),Architectural constraints/ Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),2,Strongly agree,Strongly agree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,No,Project Lead / Project Manager,Security,Targets are moving,United States,8,No,Approximately half on-site and half from home,Agile,Almost daily,Bi-weekly,No,Inconsistent requirements,We do not have enough time to carry out tasks,No use of standard format for documenting requirements,Internal or external constraints are not considered,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Interviews/ Analysis of existing documents/ Prototyping/ (Requirements) Reuse databases and guidelines,Development process aspects/ Functional properties of the system/ Goals/ Rules , business rules)/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s),My project lead told me not to spend any time on documentation./ My project lead told me not to waste any (more) time on documentation.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),3,Agree,Agree,Disagree,We check the coverage of requirements with tests/ We derive tests from system models
5,5,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,e-Government,Incomplete or hidden requirements,United States,20,Yes,Other (Please specify),Plan-driven,Weekly,Weekly,Yes,Underspecified requirements that are too abstract and allow for various interpretations,No use of standard format for documenting requirements,Inconsistent requirements,Requirements are not traceable,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase., Other (please specify),Interviews/ Analysis of existing documents/ Prototyping/ Design Thinking/ Observations,Rules ,,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Strongly agree,Agree,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ Other (please specify)
4,3,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Product Manager,Enterprise resource planning,Communication flaws between the project and the customer,Canada,15,Yes,Mostly from home,Hybrid,Weekly,Monthly,Yes,Insufficient support by project lead,An important stakeholder is not represented in our project,Underspecified requirements that are too abstract and allow for various interpretations,Unclear or unmeasurable non-functional requirements,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ Workshops and focus groups/ Observations,Formal properties of the system/ Functional properties of the system/ User interface(s),Natural language / plain text/ Structured lists of requirements/ Use case diagrams,I didn't need to document it. I know it./ I knew colleagues would complain or hate or ridicule me.,Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),3,Agree,Agree,Disagree,We check the coverage of requirements with tests/ Other (please specify)
2,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,e-Commerce,Communication flaws within the project team,United States,5,No,Approximately half on-site and half from home,Hybrid,Almost daily,Monthly,No,Lack of communication between project team and end users,Changes in requirements not communicated,Inconsistent requirements,Requirements are not traceable,Agile: we elicit and / or refine requirements in several iterations.,I don't know,Architectural constraints/ Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Stakeholders/ Acceptance criteria,My project lead told me not to spend any time on documentation.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity),4,Agree,Agree,Disagree,We define acceptance criteria and tests for requirements
5,5,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Architect,Healthcare,Incomplete or hidden requirements,Spain,10,No,Almost completely on-site,Agile,Weekly,Monthly,No,Unclear or unmeasurable non-functional requirements,Technically unfeasible requirements,Underspecified requirements that are too abstract and allow for various interpretations,Weak knowledge about customer's application domain,Agile: we elicit and / or refine requirements in several iterations.,Risk analyses,Functional properties of the system/ Goals,Activity diagrams/ Natural language / plain text/ Use cases,I didn't need to document it. I know it.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Neutral,Neutral,Neutral,Testers participate in requirements reviews/ We define acceptance criteria and tests for requirements
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Architect,Aerospace,Communication flaws between the project and the customer,Spain,100,No,Mostly on-site,Agile,Almost daily,Almost daily,No,Lack of communication between project team and end users,Communication channels used in our project are ineffective,Targets are moving,Underspecified requirements that are too abstract and allow for various interpretations,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping,Architectural constraints/ Goals/ Rules , business rules)/ Stakeholders/ Usage scenarios/ Acceptance criteria,My project lead told me not to bother.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Strongly agree,Strongly agree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,5,Make a reasonable assumption myself and proceed.,No,Developer,Avionics,Lack of communication between project team and end users,Spain,2,I don't know,Mostly from home,Hybrid,Weekly,I don't know,I don't know,Communication flaws between the project and the customer,Communication flaws within the project team,Insufficient support by project lead,We do not have enough time to carry out tasks,I don't know,I don't know,Formal properties of the system/ Functional properties of the system/ Goals/ System behaviour,Structured lists of requirements,I didn't need to document it. I know it.,,4,Agree,Neutral,Strongly disagree,I don't know
5,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Business Analyst,Logistics,Weak access to customer needs and / or (internal) business information,Germany,6,Yes,Mostly from home,Rather agile,Almost daily,Other (please specify),Yes,Unclear or unmeasurable non-functional requirements,Targets are moving,Lack of communication between project team and end users,Please make a selection,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ Workshops and focus groups/ (Requirements) Reuse databases and guidelines/ Observations,Architectural constraints/ Development process aspects/ Functional properties of the system/ Goals/ Rules , business rules)/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Acceptance criteria,I didn't need to document it. I know it.,Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),2,Agree,Strongly agree,Disagree,Testers participate in requirements reviews/ We define acceptance criteria and tests for requirements
5,5,Ask the customer/end user/or both what should be assumed before proceeding.,No,Architect,Other (please specify),Our requirements engineers lack enthusiasm or commitment to do requirements analysis,Estonia,66,No,Almost completely on-site,Rather agile,Almost daily,Bi-weekly,No,Lack of communication between project team and end users,Incomplete or hidden requirements,Changes in requirements not communicated,Targets are moving,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ Workshops and focus groups,Architectural constraints/ Goals/ Rules , business rules)/ System behaviour/ User interface(s)/ Acceptance criteria,I knew colleagues would complain or hate or ridicule me./ My colleagues told me not to bother.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ External or internal constraints (e.g.- laws),2,Agree,Agree,Neutral,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
3,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Architect,Other (please specify),Incomplete or hidden requirements,Turkey,6,Yes,Mostly from home,Hybrid,Weekly,Weekly,Yes,Inconsistent requirements,Targets are moving,Weak knowledge about customer's application domain,Technically unfeasible requirements,Agile: we elicit and / or refine requirements in several iterations.,Prototyping/ Usage data analysis (e.g. event logs)/ Lean Startup/ Experimentation with users,Architectural constraints/ Functional properties of the system/ Rules , business rules)/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws),,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability),3,Agree,Strongly agree,Disagree,We define acceptance criteria and tests for requirements
4,5,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Business Analyst,Logistics,Weak access to customer needs and / or (internal) business information,United States,10,No,Almost completely on-site,Rather plan-driven,Weekly,Weekly,No,Targets are moving ,Technically unfeasible requirements,Internal or external constraints are not considered,Lack of communication between project team and end users,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ Observations/ Experimentation with users,Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Stakeholders/ System behaviour/ Usage scenarios/ User interface(s)/ Acceptance criteria,Goal models/ Natural language / plain text/ Structured lists of requirements/ Informal sketches / wireframes / mind maps,My project lead told me not to waste any (more) time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),3,Neutral,Neutral,Neutral,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,No,Developer,Education,Lack of communication between project team and end users,United States,5,Yes,Mostly on-site,Agile,Weekly,Weekly,Yes,Changes in requirements not communicated,Inconsistent requirements,We do not have enough time to carry out tasks,Lack of commitment to shared goals within project,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Risk analyses/ Prototyping/ Design Thinking/ Lean Startup,Architectural constraints/ Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,My project lead told me not to spend any time on documentation./ My colleagues told me not to waste any (more) time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),3,Agree,Agree,Neutral,We define acceptance criteria and tests for requirements/ We derive tests from system models
5,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Education,Communication flaws between the project and the customer,United States,5,No,Approximately half on-site and half from home,Agile,Almost daily,Weekly,No,Inconsistent requirements,Changes in requirements not communicated,Weak knowledge about customer's application domain,Targets are moving,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents/ Risk analyses/ (Requirements) Reuse databases and guidelines/ Design Thinking/ Observations,Architectural constraints/ Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Stakeholders/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints  laws)/ Acceptance criteria,Use case diagrams/ Use cases/ User stories/ Acceptance Criteria (Given-When-Then),My project lead told me not to bother./ My project lead told me not to spend any time on documentation./ My project lead told me not to waste any (more) time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Portability (e.g.- adaptability- installability- replaceability)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Agree,Agree,Neutral,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
5,5,Make a reasonable assumption myself and proceed.,Yes,Business Analyst,Enterprise resource planning,Communication flaws between the project and the customer,United Kingdom,7,No,Mostly from home,Agile,Bi-weekly,Weekly,No,Lack of communication between project team and end users,Targets are moving,Lack of commitment to shared goals within project,Unclear or unmeasurable non-functional requirements,Agile: we elicit and / or refine requirements in several iterations.,Prototyping/ Workshops and focus groups/ Experimentation with users,Architectural constraints/ Goals/ Stakeholders/ Internal or external constraints  laws)/ Acceptance criteria,User stories/ Acceptance Criteria (Given-When-Then),I didn't need to document it. I know it./ I knew colleagues would complain or hate or ridicule me.,Compatibility (e.g.- co-existence- interoperability)/ Portability (e.g.- adaptability- installability- replaceability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),2,Agree,Agree,Disagree,We check the coverage of requirements with tests
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Project Lead / Project Manager,Security,Communication flaws between the project and the customer,United Kingdom,4,No,Approximately half on-site and half from home,Hybrid,Almost daily,Monthly,No,Targets are moving,Underspecified requirements that are too abstract and allow for various interpretations,Unclear or unmeasurable non-functional requirements,Weak knowledge about customer's application domain,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ Workshops and focus groups/ Design Thinking,Architectural constraints/ Goals/ Rules , business rules)/ System behaviour/ Technical interfaces/ Usage scenarios/ Acceptance criteria,I didn't need to document it. I know it.,Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),3,Agree,,0,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
2,2,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Other (please specify),Finance,Inconsistent requirements,Turkey,6,Yes,Mostly from home,Agile,Almost daily,Monthly,Yes,Lack of communication between project team and end users,Insufficient support by project lead,Weak knowledge about customer's application domain,We do not have enough time to carry out tasks,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Workshops and focus groups/ Design Thinking/ Experimentation with users,Architectural constraints/ Development process aspects/ System behaviour/ Technical interfaces/ Usage scenarios/ User interface(s)/ Acceptance criteria,Natural language / plain text/ Prototypes / user screens/ Use case diagrams/ Use cases,My project lead told me not to waste any (more) time on documentation.,Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),1,Neutral,Neutral,Disagree,We check the coverage of requirements with tests
4,5,Make a reasonable assumption myself and proceed.,Yes,Developer,Public transportation,We do not have enough time to carry out tasks,Germany,20,No,Mostly from home,Hybrid,Almost daily,Almost daily,No,Targets are moving,Gold plating (implementation of features without corresponding requirements),Changes in requirements not communicated,Underspecified requirements that are too abstract and allow for various interpretations,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents/ Prototyping/ Observations/ Usage data analysis (e.g. event logs)/ Experimentation with users,Functional properties of the system/ Goals/ Usage scenarios/ User interface(s),Class diagrams/ Natural language / plain text/ User stories/ Informal sketches / wireframes / mind maps,I didn't need to document it. I know it.,,2,Agree,Strongly agree,Disagree,We derive tests from system models/ We do not align tests and requirements
4,2,Make a reasonable assumption myself and proceed.,Yes,Developer,Manufacturing,Communication flaws within the project team,Germany,8,No,Approximately half on-site and half from home,Hybrid,Almost daily,Monthly,No,Incomplete or hidden requirements,Weak knowledge about customer's application domain,Unclear or unmeasurable non-functional requirements,No use of standard format for documenting requirements,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Design Thinking,Development process aspects/ Goals/ Usage scenarios/ Internal or external constraints  laws),Natural language / plain text/ Informal sketches / wireframes / mind maps,My project lead told me not to bother.,Compatibility (e.g.- co-existence- interoperability)/ Portability (e.g.- adaptability- installability- replaceability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Strongly agree,Agree,Disagree,Other (please specify)
5,5,Make a reasonable assumption myself and proceed.,I do not document requirements.,Product Owner,Finance,Communication flaws within the project team,Spain,13,Yes,Approximately half on-site and half from home,Agile,Almost daily,Monthly,Yes,Communication flaws between the project and the customer,Lack of communication between project team and end users,Changes in requirements not communicated,Requirements are not traceable,Agile: we elicit and / or refine requirements in several iterations.,Workshops and focus groups,Architectural constraints/ Development process aspects/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ Technical interfaces/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,,Compatibility (e.g.- co-existence- interoperability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),2,Neutral,Neutral,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We derive tests from system models
3,5,Make a reasonable assumption myself and proceed.,Yes,Developer,Healthcare,Technically unfeasible requirements,Spain,8,Yes,Approximately half on-site and half from home,Rather plan-driven,Weekly,Never,Yes,Internal or external constraints are not considered,Our team's responsibilities are unclear,Changes in requirements not communicated,Requirements are not traceable,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Risk analyses/ Prototyping/ (Requirements) Reuse databases and guidelines/ Usage data analysis (e.g. event logs)/ Experimentation with users,Formal properties of the system/ Functional properties of the system/ System behaviour/ Usage scenarios/ Internal or external constraints  laws)/ Acceptance criteria,Activity diagrams/ Structured lists of requirements/ Use case diagrams,,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),2,Agree,Agree,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
2,2,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Architect,e-Government,Weak knowledge about customer's application domain,Switzerland,15,Yes,Mostly on-site,Plan-driven,Weekly,Monthly,Yes,Internal or external constraints are not considered,Underspecified requirements that are too abstract and allow for various interpretations,Unclear or unmeasurable non-functional requirements,Changes in requirements not communicated,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ External experts,Architectural constraints/ Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Stakeholders/ Technical interfaces/ User interface(s)/ Internal or external constraints  laws),Activity diagrams/ Business process models/ Class diagrams/ Prototypes / user screens/ Sequence diagrams/ State machines/ Use case diagrams/ User stories/ Informal sketches / wireframes / mind maps,My project lead told me not to waste any (more) time on documentation./ My colleagues told me not to waste any (more) time on documentation.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),1,Agree,Agree,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
5,4,Make a reasonable assumption myself and proceed.,Yes,Developer,Energy,Weak access to customer needs and / or (internal) business information,Turkey,12,Yes,Approximately half on-site and half from home,Rather plan-driven,Almost daily,Bi-weekly,Yes,Lack of communication between project team and end users,Inconsistent requirements,Communication channels used in our project are ineffective,Targets are moving,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Interviews/ Analysis of existing documents/ Risk analyses/ Prototyping/ Workshops and focus groups/ Design Thinking/ External experts/ Observations,Architectural constraints/ Development process aspects/ Formal properties of the system/ Functional properties of the system/ Goals/ Technical interfaces,Activity diagrams/ Business process models/ Prototypes / user screens/ Sequence diagrams/ Structured lists of requirements,My colleagues told me not to spend any time on documentation./ My colleagues told me not to waste any (more) time on documentation.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Safety (e.g.- freedom of risk for health or disaster)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),4,Agree,Agree,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,No,Developer,Security,Targets are moving,United Kingdom,2,No,Approximately half on-site and half from home,Rather agile,Almost daily,Other (please specify),No,An important stakeholder is not represented in our project,No use of standard format for documenting requirements,Underspecified requirements that are too abstract and allow for various interpretations,Incomplete or hidden requirements,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents/ Risk analyses/ Prototyping/ Workshops and focus groups/ Design Thinking/ Observations/ Usage data analysis (e.g. event logs),Architectural constraints/ Development process aspects/ Functional properties of the system/ Rules , business rules)/ System behaviour/ Usage scenarios/ User interface(s),I didn't need to document it. I know it.,Compatibility (e.g.- co-existence- interoperability)/ Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ External or internal constraints (e.g.- laws),4,Agree,Strongly agree,Disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Test Manager / Tester,Finance,Communication flaws within the project team,Netherlands,7,Yes,Almost completely from home,Agile,Almost daily,Weekly,Yes,Communication flaws between the project and the customer,Lack of communication between project team and end users,Communication channels used in our project are ineffective,Changes in requirements not communicated,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents/ Other,Functional properties of the system/ Quality properties of the system/ Rules , business rules)/ System behaviour/ Usage scenarios/ User interface(s)/ Internal or external constraints (e.g. laws)/ Acceptance criteria,My project lead told me not to spend any time on documentation.,Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics)/ External or internal constraints (e.g.- laws),4,Disagree,Neutral,Neutral,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements/ We derive tests from system models
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Project Lead / Project Manager,Insurance,Targets are moving,United Kingdom,2,Yes,Mostly from home,Hybrid,Almost daily,Weekly,Yes,Underspecified requirements that are too abstract and allow for various interpretations,Weak knowledge about customer's application domain,Lack of communication between project team and end users,Incomplete or hidden requirements,Agile: we elicit and / or refine requirements in several iterations.,Analysis of existing documents/ Prototyping/ Workshops and focus groups,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Rules , business rules)/ System behaviour/ Technical interfaces/ Acceptance criteria,I didn't need to document it. I know it.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation),4,Neutral,Agree,Disagree,We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
4,5,Ask the customer/end user/or both what should be assumed before proceeding.,Yes,Developer,Other (please specify),Communication flaws between the project and the customer,Spain,12,Yes,Approximately half on-site and half from home,Hybrid,Weekly,Weekly,Yes,Communication channels used in our project are ineffective,Incomplete or hidden requirements,Insufficient support by project lead,Requirements are not traceable,Waterfall: we elicit and / or refine requirements in a specifically dedicated project phase before proceeding to the next project phase.,Analysis of existing documents/ Workshops and focus groups/ Design Thinking/ Experimentation with users,Functional properties of the system/ Quality properties of the system/ Technical interfaces/ Acceptance criteria,Business process models/ Class diagrams/ Structured lists of requirements,My project lead told me not to bother.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Neutral,Agree,Disagree,Testers participate in requirements reviews/ We define acceptance criteria and tests for requirements
4,4,Make a reasonable assumption myself and proceed.,Yes,Developer,Finance,Inconsistent requirements,United States,16,Yes,Almost completely from home,Hybrid,Almost daily,Weekly,Yes,Insufficient support by project lead,Changes in requirements not communicated,Targets are moving,We do not have enough time to carry out tasks,Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Analysis of existing documents/ Prototyping/ Workshops and focus groups/ External experts/ Observations/ Usage data analysis (e.g. event logs),Architectural constraints/ Functional properties of the system/ Goals/ Rules , business rules)/ Stakeholders/ Technical interfaces/ Internal or external constraints (e.g. laws),I didn't need to document it. I know it./ My project lead told me not to bother./ My colleagues told me not to bother.,Compatibility (e.g.- co-existence- interoperability)/ Performance efficiency (e.g.- time behaviour- resource utilisation- capacity)/ Reliability (e.g.- availability- fault tolerance- maturity- recoverability)/ Usability (e.g.- accessibility- appropriateness recognizability- learnability- operability- user error protection- UI aesthetics),4,Strongly agree,Disagree,Agree,We check the coverage of requirements with tests/ We derive tests from system models/ We do not align tests and requirements
4,4,Ask the customer/end user/or both what should be assumed before proceeding.,I do not document requirements.,Developer,Other (please specify),Incomplete or hidden requirements,Turkey,51,No,Almost completely from home,Rather agile,Almost daily,I don't know,No,Unclear or unmeasurable non-functional requirements,Weak access to customer needs and / or (internal) business information,No use of standard format for documenting requirements,Gold plating (implementation of features without corresponding requirements),Agile: we elicit and / or refine requirements in several iterations.,Interviews/ Prototyping/ (Requirements) Reuse databases and guidelines/ Design Thinking/ Observations,Architectural constraints/ Formal properties of the system/ Functional properties of the system/ Goals/ Quality properties of the system/ Rules , business rules)/ System behaviour/ Technical interfaces/ Usage scenarios/ Acceptance criteria,My colleagues told me not to waste any (more) time on documentation.,Maintainability (e.g.- analysability- modularity- modifiability- reusability- testability)/ Security (e.g.- accountability- authenticity- confidentiality- integrity- non-repudiation)/ External or internal constraints (e.g.- laws),3,Strongly agree,Neutral,Strongly disagree,Testers participate in requirements reviews/ We check the coverage of requirements with tests/ We define acceptance criteria and tests for requirements
1,1,Make a reasonable assumption myself and proceed,No,Developer,Aerospace,Gold plating (implementation of features without clear value),Argentina,45,Yes,Approximately half on-site and half from home,Agile,Almost daily,Almost daily,Yes,Inconsistent requirements,Changes in requirements not communicated,"Targets are moving (changing goals, business priorities)",No use of standard format for documenting requirements,Agile: we elicit and/or refine requirements in several iterations.,Risk analyses / Observations,"Rules (e.g., business rules) / Usage scenarios",Activity diagrams,My project lead told me not to bother. / My colleagues told me not to waste any (more) time on documentation.,"Security (e.g., accountability, authenticity, confidentiality, integrity, non-repudiation) / Usability (e.g., accessibility, appropriateness recognizability, learnability, operability, user error protection, UI aesthetics)",1,Strongly disagree,Strongly disagree,Strongly disagree,We check the coverage of requirements with tests
